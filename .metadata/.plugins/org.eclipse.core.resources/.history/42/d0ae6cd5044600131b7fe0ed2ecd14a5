package ch.fhnw.error404.DerGrosseDalmuti.server;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.net.ServerSocket;
import java.net.Socket;

import ch.fhnw.error404.DerGrosseDalmuti.shared.*;

public class Server implements Runnable{
	public static void main(String[] args){
		
		Server server = new Server();
		
		Thread serverThread = new Thread(server, "Listener");
		serverThread.start();
		
		
	}
	
	@Override
	public void run() {
		try {
			// Create the server socket, to listen for incoming requests
			ServerSocket listener = new ServerSocket(404, 10, null);
			Player Jonas = new Player("Jonas");
			Object obj = Jonas;
			
			while(true){
				// Wait for and accept an incoming request
				Socket socket = listener.accept();
				
				// create a new file with an ObjectOutputStream
		        FileOutputStream out = new FileOutputStream("obj.tmp");
		        ObjectOutputStream objOut = new ObjectOutputStream(out);
				
		        // write something in the file
		        objOut.writeObject(obj);
		        objOut.flush();
		        
		        // create an ObjectInputStream for the file we created before
		        ObjectInputStream ois = new ObjectInputStream(new FileInputStream("obj.tmp"));

		        // read and print an object and cast it as string
		        System.out.println("" + (String) ois.readObject());

		        // read and print an object and cast it as string
		        byte[] read = (byte[]) ois.readObject();
		        String s2 = new String(read);
		        System.out.println("" + s2);
		         
		        out.close();
		        objOut.close();
		        ois.close();
		        socket.close();
				
			}
			
			
			
		}
		catch (Exception e){
			System.out.println(e.getStackTrace());
		}
		
	}

}
